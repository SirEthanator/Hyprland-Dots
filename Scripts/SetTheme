#!/bin/bash

# ==== Adding a theme ==== #

# Modify argument check
# Define theme variables
# Add wallpaper
# Add quickshell theme
# Add gtk and kvantum themes
# Add icon and cursor themes
# Add kitty colour file
# Add neovim theme
# Add macchina messages


# ==== Common ==== #

function help() {
  echo 'Syntax: SetTheme <option> <flags>'
  echo 'Options:'
  echo '1. Everforest'
  echo '2. Catppuccin Mocha'
  echo '3. Rose Pine'
  echo ''
  echo 'Flags:'
  echo '--noconfirm'
  echo '--noqsreload'
  exit "$1"
}

if [[ "$1" == '-h' || "$1" == '--help' ]]; then
  help 0
fi

selected=$(echo "$1" | tr '[:upper:]' '[:lower:]')
if [[ "$selected" -eq 1 || "$selected" == "everforest" ]]; then
  theme='Everforest'
  gtk='Colloid-Green-Everforest'
  quickshell='everforest'
  icons='Colloid-Green-Everforest-Dark'
  cursors='Bibata-Modern-Everforest'
  cursorsLight='Bibata-Modern-Everforest-Light'
  accent='A7C080'
  accentDim='3C4841'
  wall="$HOME/Hyprland-Dots/Wallpapers/Everforest/Accent.png"
elif [[ "$selected" -eq 2 || "$selected" == "catmocha" ]]; then
  theme='CatMocha'
  gtk='Colloid-Purple-Catppuccin'
  quickshell='catMocha'
  icons='Colloid-Purple-Catppuccin-Dark'
  cursors='Bibata-Modern-CatMocha'
  cursorsLight='Bibata-Modern-CatLatte'
  accent='B4BEFE'
  accentDim='5A5F7F'  # 50% dimmed accent
  wall="$HOME/Hyprland-Dots/Wallpapers/Catppuccin/Accent.png"
elif [[ "$selected" -eq 3 || "$selected" == "rosepine" ]]; then
  theme='Rose-Pine'
  gtk='Colloid-Teal-Rosepine'
  quickshell='rosePine'
  icons='Colloid-Teal-Rosepine-Dark'
  cursors='Bibata-Modern-Rose-Pine'
  cursorsLight='Bibata-Modern-Rose-Pine-Dawn'
  accent='9CCFD8'
  accentDim='4E686C'  # 50% dimmed accent
  wall="$HOME/Hyprland-Dots/Wallpapers/Rose-Pine/Accent.png"
else
  help 1
fi

noconfirm=0
noqsreload=0

shift
for arg in "$@"; do
  case "$arg" in
    --noconfirm)
      noconfirm=1
      ;;
    --noqsreload)
      noqsreload=1
      ;;
  esac
done

prompt() {
  # Syntax: prompt-text default

  local prompt default input output
  prompt=$1
  default=$(echo "$2" | tr '[:upper:]' '[:lower:]')

  if [[ "$noconfirm" -eq 1 ]]; then
    echo "$default"
  else
    read -p "$prompt" input
    input=$(echo "$input" | tr '[:upper:]' '[:lower:]')

    if [[ $input == 'y' || ( -z $input && $default == 'y' ) ]]; then
      output=1
    elif [[ $input == 'n' || ( -z $input && $default == 'n' ) ]]; then
      output=0
    else
      if [[ $default == 'y' ]]; then output=1; else output=0; fi
    fi
    echo "$output"
  fi
}

changeWall=$(prompt 'Change wallpaper? (y/N) ' 'n')
lightCurs=$(prompt 'Enable light cursors? (y/N) ' 'n')


# === Quickshell === #
echo 'Setting Quickshell theme...'
if [[ $(quickshell list --all) == "No running instances." ]]; then
  echo "No instances of Quickshell found, launching..."
  quickshell --daemonize > /dev/null 2>&1
fi
quickshell ipc call config colours "$quickshell" false > /dev/null 2>&1
if [[ "$changeWall" -eq 1 ]]; then
  quickshell ipc call config wallpaper "$wall" false > /dev/null 2>&1
fi


# ==== GTK theme + icons ==== #
if [[ "$lightCurs" -eq 1 ]]; then
  cursors="$cursorsLight"
fi

echo 'Setting GTK theme, icons & cursors...'
if [[ -e $HOME/.config/gtk-3.0/settings.ini ]]; then
  sed -i "s/.*gtk-theme-name.*/gtk-theme-name=$gtk/" $HOME/.config/gtk-3.0/settings.ini
  sed -i "s/.*gtk-icon-theme-name.*/gtk-icon-theme-name=$icons/" $HOME/.config/gtk-3.0/settings.ini
  sed -i "s/.*gtk-cursor-theme-name.*/gtk-cursor-theme-name=$cursors/" $HOME/.config/gtk-3.0/settings.ini
fi
if [[ -e $HOME/.config/gtk-4.0/settings.ini ]]; then
  sed -i "s/.*gtk-theme-name.*/gtk-theme-name=$gtk/" $HOME/.config/gtk-4.0/settings.ini
  sed -i "s/.*gtk-icon-theme-name.*/gtk-icon-theme-name=$icons/" $HOME/.config/gtk-4.0/settings.ini
  sed -i "s/.*gtk-cursor-theme-name.*/gtk-cursor-theme-name=$cursors/" $HOME/.config/gtk-4.0/settings.ini
fi

if [[ ! -d $HOME/.icons ]]; then
  mkdir $HOME/.icons
fi

echo '[Icon Theme]'       > $HOME/.icons/default/index.theme
echo 'Name=Default'      >> $HOME/.icons/default/index.theme
echo "Inherits=$cursors" >> $HOME/.icons/default/index.theme
echo ''                  >> $HOME/.icons/default/index.theme

hyprctl setcursor $cursors 32 > /dev/null 2>&1
gsettings set org.gnome.desktop.interface cursor-theme "$cursors"
gsettings set org.gnome.desktop.interface gtk-theme "$gtk"
gsettings set org.gnome.desktop.interface icon-theme "$icons"

# Libadwaita
if [[ -e "$HOME/.config/gtk-4.0/gtk.css" || -L "$HOME/.config/gtk-4.0/gtk.css" ]]; then
  rm -f "$HOME/.config/gtk-4.0/gtk.css"
fi
if [[ -e "$HOME/.config/gtk-4.0/gtk-dark.css" || -L "$HOME/.config/gtk-4.0/gtk-dark.css" ]]; then
  rm -f "$HOME/.config/gtk-4.0/gtk-dark.css"
fi
if [[ -e "$HOME/.config/gtk-4.0/assets" || -L "$HOME/.config/gtk-4.0/assets" ]]; then
  rm -rf "$HOME/.config/gtk-4.0/assets"  # -r is in case it's not a symlink already (is a directory)
fi

ln -s $HOME/.themes/$theme/gtk-4.0/gtk-dark.css $HOME/.config/gtk-4.0
ln -s $HOME/.themes/$theme/gtk-4.0/gtk.css $HOME/.config/gtk-4.0
ln -s $HOME/.themes/$theme/gtk-4.0/assets $HOME/.config/gtk-4.0

# Envvars
if [[ -e $HOME/.config/hypr/envvars.conf ]]; then
  if grep -q GTK_THEME $HOME/.config/hypr/envvars.conf; then
    sed -i "s/.*GTK_THEME.*/env = GTK_THEME,$gtk:dark/" $HOME/.config/hypr/envvars.conf
  else
    echo "env = GTK_THEME,$gtk:dark" >> $HOME/.config/hypr/envvars.conf
  fi

  if grep -q HYPRCURSOR_THEME $HOME/.config/hypr/envvars.conf; then
    sed -i "s/.*HYPRCURSOR_THEME.*/env = HYPRCURSOR_THEME,$cursors/" $HOME/.config/hypr/envvars.conf
  else
    echo "env = HYPRCURSOR_THEME,$cursors" >> $HOME/.config/hypr/envvars.conf
  fi

  if grep -q XCURSOR_THEME $HOME/.config/hypr/envvars.conf; then
    sed -i "s/.*XCURSOR_THEME.*/env = XCURSOR_THEME,$cursors/" $HOME/.config/hypr/envvars.conf
  else
    echo "env = XCURSOR_THEME,$cursors" >> $HOME/.config/hypr/envvars.conf
  fi
fi


# ==== Kvantum ==== #
echo 'Setting Kvantum theme...'
echo '[General]'     > $HOME/.config/Kvantum/kvantum.kvconfig
echo "theme=$theme" >> $HOME/.config/Kvantum/kvantum.kvconfig


# ==== Qt icons ==== #
echo 'Setting QT icon theme...'
sed -i "s/.*icon_theme.*/icon_theme=$icons/" $HOME/.config/qt5ct/qt5ct.conf
sed -i "s/.*icon_theme.*/icon_theme=$icons/" $HOME/.config/qt6ct/qt6ct.conf


# ==== Kitty ==== #
echo 'Setting Kitty theme...'

cat < $HOME/.config/kitty/main    > $HOME/.config/kitty/kitty.conf  # > overwrites whole file
cat < $HOME/.config/kitty/$theme >> $HOME/.config/kitty/kitty.conf  # >> appends to file


# ==== Macchina ==== #
echo 'Setting Macchina theme...'
sed -i "s/.*key_color.*/key_color = \"#$accent\"/" $HOME/.config/macchina/themes/Theme.toml
sed -i "s/.*separator_color.*/separator_color = \"#$accent\"/" $HOME/.config/macchina/themes/Theme.toml
sed -i "s/.*msgFile=.*/msgFile=~\/Scripts\/Messages\/$theme/" $HOME/Scripts/RandomMessage
# The above replace the entire line that contains the first string with the second string


# ==== Cava ====
echo 'Setting Cava theme...'
sed -i "s/.*foreground.*/foreground = '#$accent'/" ~/.config/cava/config


# ==== Neovim ==== #
if [[ -d $HOME/.config/nvim/lua/plugins ]]; then
  cd $HOME/.config/nvim/lua/plugins
  if [[ -e ./Theme.lua ]]; then
    rm ./Theme.lua
  fi
  ln -s ./$theme ./Theme.lua
else
  echo 'lazy.nvim not found, please set Neovim theme manually.'
fi


# ==== Hyprland ==== #
echo 'Setting Hyprland theme...'
sed -i "s/.*col.active_border.*/    col.active_border = 0xff$accent 0xff$accentDim 0xff$accentDim 0xff$accentDim 225deg/" ~/.config/hypr/hyprland/customisation.conf
sed -i "s/.*col.inactive_border.*/    col.inactive_border = 0xff$accentDim/" ~/.config/hypr/hyprland/customisation.conf


# ==== Finish up ==== #
echo 'Reloading Kitty...'
for pid in $(pidof kitty); do
  kill -SIGUSR1 $pid > /dev/null 2>&1  # Output gets deleted
done

echo 'Reloading Cava...'
for pid in $(pidof cava); do
  kill -SIGUSR1 $pid > /dev/null 2>&1
done

echo 'Reloading Hyprland...'
hyprctl reload > /dev/null 2>&1

if [[ "$noqsreload" -eq 0 ]]; then
  echo 'Reloading Quickshell...'
  quickshell ipc call config reload
fi

echo 'Done! Reboot may be required for some changes to take effect.'
exit 0

